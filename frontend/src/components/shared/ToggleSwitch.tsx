import { styled } from "@mui/material/styles";
import Switch, { SwitchProps } from "@mui/material/Switch";
import React from "react";

// Defines the props that the ToggleSwitch componenet accepts and needs
// It extends MUI's SwitchProps but overrides the onChange to use a simpler onChange prop
interface ToggleSwitchProps extends Omit<SwitchProps, "onChange"> {
  checked?: boolean;
  onChange: (checked: boolean) => void;
}

// Imported code from MUI
// A cutomized version of MUI's Switch
const AntSwitch = styled(Switch)(({ theme }) => ({
  width: 28,
  height: 16,
  padding: 0,
  "& .MuiSwitch-switchBase": {
    padding: 2,
    "&.Mui-checked": {
      transform: "translateX(12px)",
      color: "#fff",
      "& + .MuiSwitch-track": {
        opacity: 1,
        backgroundColor: "#1890ff",
        ...theme.applyStyles("dark", {
          backgroundColor: "#24C849",
        }),
      },
    },
  },
  "& .MuiSwitch-thumb": {
    boxShadow: "0 2px 4px 0 rgb(0 35 11 / 20%)",
    width: 12,
    height: 12,
    borderRadius: 6,
    transition: theme.transitions.create(["width"], {
      duration: 200,
    }),
  },
  "& .MuiSwitch-track": {
    borderRadius: 16 / 2,
    opacity: 1,
    backgroundColor: "rgba(0,0,0,.25)",
    boxSizing: "border-box",
    ...theme.applyStyles("dark", {
      backgroundColor: "rgba(255,255,255,.35)",
    }),
  },
}));

// Main component
// A React function component that expects props of type ToggleSwitchProps
const ToggleSwitch: React.FC<ToggleSwitchProps> = ({
  checked,
  onChange,
  ...props
}) => {
  // Adapat MUI's (event, boolean) signature to our simpler (boolean) signature
  const handleChange = (
    event: React.ChangeEvent<HTMLInputElement>,
    newChecked: boolean
  ) => {
    // Only pass the boolean value to the parent
    // The newChecked boolean value is automatically generated by MUI's Switch component based on the actual HTML checkbox state when toggled.
    onChange(newChecked); // Forward to parent
  };

  return (
    <AntSwitch checked={checked} onChange={handleChange} {...props}></AntSwitch>
  );
};

export default ToggleSwitch;
